{"ast":null,"code":"var _jsxFileName = \"/Users/rajdeepvijayakar/prarubdha Work/react-burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      }\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = Object.assign(this.state.ingredients);\n      updatedIngredients[type] = updatedCount;\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = Object.assign(this.state.ingredients);\n      updatedIngredients[type] = updatedCount;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/rajdeepvijayakar/prarubdha Work/react-burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","BurgerBuilder","state","ingredients","salad","bacon","cheese","meat","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","Object","assign","removeIngredientHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;;AAGA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCK,KAFkC,GAE1B;AACJC,MAAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,KAAK,EAAE,CAFE;AAGTC,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG;AADT,KAF0B;;AAAA,SAWlCC,oBAXkC,GAWVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,WAAX,CAAuBM,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKZ,KAAL,CAAWC,WAAzB,CAA3B;AACAS,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACH,KAhBiC;;AAAA,SAkBlCI,uBAlBkC,GAkBPN,IAAD,IAAS;AAC/B,YAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWC,WAAX,CAAuBM,IAAvB,CAAjB;;AACA,UAAGC,QAAQ,IAAI,CAAf,EAAiB;AAAC;AAAQ;;AAC1B,YAAMC,YAAY,GAAGD,QAAQ,GAAG,CAAhC;AACA,YAAME,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKZ,KAAL,CAAWC,WAAzB,CAA3B;AACAS,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACH,KAxBiC;AAAA;;AA0BlCK,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,aAAD;AACA,MAAA,eAAe,EAAI,KAAKK,oBADxB;AAEA,MAAA,iBAAiB,EAAI,KAAKO,uBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AASH;;AApCiC;;AAuCtC,eAAed,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\n\nclass BurgerBuilder extends Component {\n    \n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        }\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = Object.assign(this.state.ingredients);\n        updatedIngredients[type] = updatedCount;\n    }\n\n    removeIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0){return;}\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = Object.assign(this.state.ingredients);\n        updatedIngredients[type] = updatedCount;\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                ingredientAdded = {this.addIngredientHandler}\n                ingredientRemoved = {this.removeIngredientHandler}\n                />\n            </Aux>\n        )\n    }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}